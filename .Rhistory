if (!require(dplyr)) {
install.packages("dplyr", dependencies = TRUE)
require(dplyr)
}
if (!require(ggpubr)) {
install.packages("ggpubr", dependencies = TRUE)
require(ggpubr)
}
if (!require(tidyverse)) {
install.packages("tidyverse", dependencies = TRUE)
require(tidyverse)
}
winter_nelly <- c(150.6948, 144.935, 321.2211, 153.4385, 122.8188, 171.2131, 157.9422, 219.7431, 204.1157)
golden_bosc <- c(130.2934, 192.9736, 227.2896, 160.5874, 132.915, 118.7482, 149.1814, 236.0405, 191.3631, 133.928, 367.991, 144.3353)
alfa <- 0.05
print(shapiro.test(winter_nelly))
print(shapiro.test(golden_bosc))
# Gráfico de dispersión e histograma
g1 <- gghistogram(winter_nelly, color = "blue",
fill = "blue", bins = 10,
xlab = "Peso (Gramos)",
ylab = "Peras (Unidad)")
g2 <- gghistogram(golden_bosc, color = "red",
fill = "red", bins = 10,
xlab = "Peso (Gramos)",
ylab = "Peras (Unidad)")
print(g1)
print(g2)
g1_q_q <- ggqqplot(data = winter_nelly, color = "steelblue", xlab = "Teórico", ylab = "Muestra", title = "Gráfico Q-Q muestra vs. distr. normal")
print(g1_q_q)
g2_q_q <- ggqqplot(data = golden_bosc, color = "steelblue", xlab = "Teórico", ylab = "Muestra", title = "Gráfico Q-Q muestra vs. distr. normal")
print(g2_q_q)
if (!require(dplyr)) {
install.packages("dplyr", dependencies = TRUE)
require(dplyr)
}
if (!require(ggpubr)) {
install.packages("ggpubr", dependencies = TRUE)
require(ggpubr)
}
if (!require(tidyverse)) {
install.packages("tidyverse", dependencies = TRUE)
require(tidyverse)
}
winter_nelly <- c(150.6948, 144.935, 321.2211, 153.4385, 122.8188, 171.2131, 157.9422, 219.7431, 204.1157)
golden_bosc <- c(130.2934, 192.9736, 227.2896, 160.5874, 132.915, 118.7482, 149.1814, 236.0405, 191.3631, 133.928, 367.991, 144.3353)
alfa <- 0.05
print(shapiro.test(winter_nelly))
print(shapiro.test(golden_bosc))
# Se realizan los gráfico de dispersión e histograma correspondientes
g1 <- gghistogram(winter_nelly, color = "blue",
fill = "blue", bins = 10,
xlab = "Peso (Gramos)",
ylab = "Peras (Unidad)")
g2 <- gghistogram(golden_bosc, color = "red",
fill = "red", bins = 10,
xlab = "Peso (Gramos)",
ylab = "Peras (Unidad)")
print(g1)
print(g2)
g1_q_q <- ggqqplot(data = winter_nelly,
color = "steelblue",
xlab = "Teórico",
ylab = "Muestra",
title = "Gráfico Q-Q muestra Winter_nelly vs. distr. normal")
print(g1_q_q)
g2_q_q <- ggqqplot(data = golden_bosc,
color = "steelblue",
xlab = "Teórico",
ylab = "Muestra",
title = "Gráfico Q-Q muestra golden_bosc vs. distr. normal")
print(g2_q_q)
# Se realiza una Transformación logarítmica debido a la asimetría de los datos
log_winter_nelly <- log(winter_nelly)
log_golden_bosc <- log(golden_bosc)
# Se utiliza shapiro para verificar si las transformaciones tienen una distribucion normal
print(shapiro.test(log_winter_nelly))
print(shapiro.test(log_golden_bosc))
if (!require(dplyr)) {
install.packages("dplyr", dependencies = TRUE)
require(dplyr)
}
if (!require(ggpubr)) {
install.packages("ggpubr", dependencies = TRUE)
require(ggpubr)
}
if (!require(tidyverse)) {
install.packages("tidyverse", dependencies = TRUE)
require(tidyverse)
}
winter_nelly <- c(150.6948, 144.935, 321.2211, 153.4385, 122.8188, 171.2131, 157.9422, 219.7431, 204.1157)
golden_bosc <- c(130.2934, 192.9736, 227.2896, 160.5874, 132.915, 118.7482, 149.1814, 236.0405, 191.3631, 133.928, 367.991, 144.3353)
alfa <- 0.05
print(shapiro.test(winter_nelly))
print(shapiro.test(golden_bosc))
# Se realizan los gráficos de dispersión e histograma correspondientes
g1 <- gghistogram(winter_nelly, color = "blue",
fill = "blue", bins = 10,
xlab = "Peso (Gramos)",
ylab = "Peras (Unidad)")
g2 <- gghistogram(golden_bosc, color = "red",
fill = "red", bins = 10,
xlab = "Peso (Gramos)",
ylab = "Peras (Unidad)")
print(g1)
print(g2)
# Se realizan los gráficos Q-Q para mostrar la distribución.
g1_q_q <- ggqqplot(data = winter_nelly,
color = "steelblue",
xlab = "Teórico",
ylab = "Muestra",
title = "Gráfico Q-Q muestra Winter Nelly vs. distribución normal")
print(g1_q_q)
g2_q_q <- ggqqplot(data = golden_bosc,
color = "steelblue",
xlab = "Teórico",
ylab = "Muestra",
title = "Gráfico Q-Q muestra Golden Bosc vs. distribución normal")
print(g2_q_q)
# Se realiza una transformación logarítmica debido a la asimetría de los datos
log_winter_nelly <- log(winter_nelly)
log_golden_bosc <- log(golden_bosc)
# Se utiliza Shapiro para verificar si las transformaciones tienen una distribución normal
print(shapiro.test(log_winter_nelly))
print(shapiro.test(log_golden_bosc))
# Se realizan los gráficos de dispersión e histograma correspondientes
log_g1 <- gghistogram(log_winter_nelly,
color = "blue",
fill = "blue",
bins = 10,
xlab = "Peso (Gramos)",
ylab = "Peras (Unidad)")
log_g2 <- gghistogram(log_golden_bosc,
color = "red",
fill = "red",
bins = 10,
xlab = "Peso (Gramos)",
ylab = "Peras (Unidad)")
print(log_g1)
print(log_g2)
log_g1_q_q <- ggqqplot(data = log_winter_nelly,
color = "steelblue",
xlab = "Teórico",
ylab = "Muestra",
title = "Gráfico Q-Q muestra transformada Winter Nelly vs. distribución normal")
print(log_g1_q_q)
log_g2_q_q <- ggqqplot(data = log_golden_bosc,
color = "steelblue",
xlab = "Teórico",
ylab = "Muestra",
title = "Gráfico Q-Q muestra transformada Golden Bosc vs. distribución normal")
print(log_g2_q_q)
# Ahora, se realizará una prueba no paramétrica de Wilcoxon emparejada sobre los datos transformados
wilcox_test <- wilcox.test(log_winter_nelly, log_golden_bosc, paired = TRUE)
prueba <- t.test(x = log_winter_nelly,
y = log_golden_bosc,
paired = FALSE,
alternative = "two.sided",
mu = 0,
conf.level = 1 - alfa)
#se imprime la prueba realizada
print(prueba)
